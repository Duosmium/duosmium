/* modified from https://github.com/vanillaes/csv */
const parseCSV=function(){function e(e){let r=e.options.typed?function(e){switch(!0){case"true"===e:case"false"===e:return"true"===e;case/.\./.test(e):return parseFloat(e);case isFinite(e):return parseInt(e);default:return e}}(e.value):e.value;e.entry.push(e.reviver(r,e.row,e.col)),e.value="",e.col++}function r(e){e.output.push(e.entry),e.entry=[],e.row++,e.col=1}return function(t,a,c=(e=>e)){let s=Object.create(null);s.options=a||{},s.reviver=c,s.value="",s.entry=[],s.output=[],s.col=1,s.row=1;let l=/"|,|\r\n|\n|\r|[^",\r\n]+/y,o=/^(\r\n|\n|\r)$/,n=[],u="",i=0;for(;null!==(n=l.exec(t));)switch(u=n[0],i){case 0:switch(!0){case'"'===u:i=3;break;case","===u:i=0,e(s);break;case o.test(u):i=0,e(s),r(s);break;default:s.value+=u,i=2}break;case 2:switch(!0){case","===u:i=0,e(s);break;case o.test(u):i=0,e(s),r(s);break;default:throw i=4,Error(`CSVError: Illegal state [row:${s.row}, col:${s.col}]`)}break;case 3:if(!0==('"'===u))i=4;else i=3,s.value+=u;break;case 4:switch(!0){case'"'===u:i=3,s.value+=u;break;case","===u:i=0,e(s);break;case o.test(u):i=0,e(s),r(s);break;default:throw Error(`CSVError: Illegal state [row:${s.row}, col:${s.col}]`)}}return 0!==s.entry.length&&(e(s),r(s)),s.output}}();