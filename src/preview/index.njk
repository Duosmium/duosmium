---
title: SciolyFF Previewer | Duosmium Results
description: Verify and preview the Sciolyff file format.

layout: base.njk
---

<style>
  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }
  body,
  html {
    font-family: Roboto, -apple-system, BlinkMacSystemFont, Segoe UI,
      Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji,
      Segoe UI Symbol;
    margin: 0;
    padding: 0;
    height: 100%;
  }
  div#subway {
    height: 100%;
  }
  main {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    height: 100%;
  }
  div#editor {
    width: 50%;
    max-width: 45em;
    display: flex;
    flex-direction: column;
  }
  div#topbar {
    color: #f5f5f5;
    background-color: #1f1b35;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    padding: 8px 12px;
  }
  h1 {
    margin: auto 3rem auto 1rem;
    padding: 0.15em 0;
    white-space: nowrap;
    font-size: 2rem;
    font-weight: 500;
  }

  textarea {
    flex-grow: 1;
    width: 100%;
    margin: 0;
    border: none;
    resize: none;
    padding: 1em;
    font-family: monospace;
    font-size: 16px;
    background-color: #f5f5f5;
  }
  iframe {
    border: none;
    flex-grow: 1;
  }
  div#toggle {
    display: none;
  }
  @media (max-width: 640px) {
    div#subway {
      width: 100vw;
      overflow: hidden;
    }
    main {
      width: 200vw;
      height: calc(100% - 4em);
    }
    div#toggle {
      background-color: #ddd;
      display: block;
      height: 4em;
      position: fixed;
      width: 100%;
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
    }
    div#toggle > span {
      margin: 1em;
    }
    span.selected {
      text-decoration: underline;
      font-weight: bold;
    }
  }
  input[type="checkbox"] {
    height: 0;
    width: 0;
    visibility: hidden;
  }

  label {
    cursor: pointer;
    text-indent: -9999px;
    width: 60px;
    height: 34px;
    background: grey;
    display: block;
    border-radius: 34px;
    position: relative;
  }

  label:after {
    content: "";
    position: absolute;
    top: 4px;
    left: 4px;
    width: 26px;
    height: 26px;
    background: #fff;
    border-radius: 50%;
    transition: 0.4s;
  }

  input:checked + label {
    background: #2196f3;
  }

  input:checked + label:after {
    left: calc(100% - 5px);
    transform: translateX(-100%);
  }
</style>
<div id="subway">
  <main>
    <div id="editor">
      <div id="topbar">
        <h1>SciolyFF Preview</h1>
      </div>
      <textarea id="input-text">
Tournament:
  level: Nationals
  location: Zoom University
  division: C
  year: 2020
  date: 2020-04-01

Events:
- name: Disease Detectives
- name: Dynamic Planet

Teams:
- school: The Best Around
  number: 1
  state: AK
- school: The Greatest Around
  number: 2
  state: HI

Placings:
- event: Disease Detectives
  team: 1
  raw:
    score: -1.0
    tier: 2
- event: Disease Detectives
  team: 2
  raw:
    score: -10.0
- event: Dynamic Planet
  team: 1
  raw:
    score: 100.0
- event: Dynamic Planet
  team: 2
  participated: false
</textarea
      >
    </div>
    <iframe id="preview-output" title="Results output preview"></iframe>
  </main>
  <div id="toggle">
    <span id="input-label" class="selected">Input</span>
    <input type="checkbox" id="switch" />
    <label for="switch">Preview toggle</label>
    <span id="output-label">Output</span>
  </div>
</div>
<script>
  (() => {
    const qs = (selector) => document.querySelector(selector);

    const setIframe = (content) => {
      fetch("/preview/render/", {
        method: "POST",
        body: JSON.stringify({ res: content }),
      })
        .then((res) => res.text())
        .then((html) =>
          qs("#preview-output").contentWindow.document.write(html)
        );
    };
    setIframe(qs("#input-text").value);

    let timeout;
    const debounceEditor = (e) => {
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        setIframe(e.target.value);
      }, 500);
    };

    qs("#input-text").addEventListener("input", debounceEditor);

    qs("#switch").addEventListener("input", (e) => {
      if (e.target.checked) {
        qs("#output-label").classList.add("selected");
        qs("#input-label").classList.remove("selected");
        qs("#subway").scrollLeft = 1000;
      } else {
        qs("#output-label").classList.remove("selected");
        qs("#input-label").classList.add("selected");
        qs("#subway").scrollLeft = 0;
      }
    });
  })();
</script>
