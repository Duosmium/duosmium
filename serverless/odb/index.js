const { EleventyServerless } = require("@11ty/eleventy");
const fs = require("node:fs/promises");

// Explicit dependencies for the bundler from config file and global data.
// The file is generated by the Eleventy Serverless Bundler Plugin.
require("./eleventy-bundler-modules.js");

async function handler(event) {
  if (
    !event.path.endsWith("/") &&
    !event.path.split("/").slice(-1)[0].includes(".")
  ) {
    return {
      statusCode: 301,
      headers: {
        Location: event.path + "/",
      },
      body: "",
    };
  }

  let elev = new EleventyServerless("odb", {
    path: event.path,
    query: event.queryStringParameters,
    functionsDir: "./serverless/",
  });

  try {
    let [page] = await elev.getOutput();

    // If you want some of the data cascade available in `page.data`, use `eleventyConfig.dataFilterSelectors`.
    // Read more: https://www.11ty.dev/docs/config/#data-filter-selectors
    console.log("Built page: " + event.path);

    return {
      statusCode: 200,
      headers: {
        "Content-Type": "text/html; charset=UTF-8",
        ...page.data.headers,
      },
      body: page.content,
    };
  } catch (error) {
    // Only console log for matching serverless paths
    // (otherwise you’ll see a bunch of BrowserSync 404s for non-dynamic URLs during --serve)
    if (elev.isServerlessUrl(event.path)) {
      console.log("Serverless Error:", error);
    }

    const page404 = await fs.readFile("./_site/404.html", "utf8");

    return {
      statusCode: 404,
      headers: {
        "Content-Type": "text/html; charset=UTF-8",
      },
      body: page404,
    };

    // return {
    //   statusCode: error.httpStatusCode || 500,
    //   body: JSON.stringify(
    //     {
    //       error: error.message,
    //     },
    //     null,
    //     2
    //   ),
    // };
  }
}

// Choose one:
// * Runs on each request: AWS Lambda (or Netlify Function)
// * Runs on first request only: Netlify On-demand Builder
//   (don’t forget to `npm install @netlify/functions`)

// exports.handler = handler;

const { builder } = require("@netlify/functions");
exports.handler = builder(handler);
